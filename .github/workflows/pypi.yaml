# Publish archives to PyPI and TestPyPI using GitHub Actions
name: Publish to PyPI

# Only run for tagged releases
on:
  release:
    types:
      - released
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-artifact:
    name: Build echopop package
    runs-on: ubuntu-20.04
    if: github.repository == 'OSOceanAcoustics/echopop'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        # fetch all history so that setuptools-scm works
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: 3.9

    - name: Install dependencies
      run: python -m pip install setuptools wheel

    # This step is only necessary for testing purposes and for TestPyPI
    - name: Fix up version string for TestPyPI
      if: ${{ !startsWith(github.ref, 'refs/tags') }}
      run: |
        # Change setuptools-scm local_scheme to "no-local-version" so the
        # local part of the version isn't included, making the version string
        # compatible with PyPI.
        sed --in-place "s/node-and-date/no-local-version/g" pyproject.toml

    - name: Build source and wheel distributions
      run: |
        python setup.py sdist bdist_wheel
        echo ""
        echo "Generated files:"
        ls -lh dist/
    - uses: actions/upload-artifact@v4
      with:
        name: releases
        path: dist

  test-built-dist:
    name: Test echopop package
    needs: build-artifact
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/setup-python@v5.1.0
      name: Install Python
      with:
        python-version: 3.9
    - uses: actions/download-artifact@v4
      with:
        name: releases
        path: dist
    - name: List contents of built dist
      run: |
        ls -ltrh
        ls -ltrh dist
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.14
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verbose: true
        skip-existing: true
    - name: Check pypi packages
      run: |
        sleep 3
        python -m pip install --upgrade pip

        echo "=== Testing wheel file ==="
        # Install wheel to get dependencies and check import
        python -m pip install --extra-index-url https://test.pypi.org/simple --upgrade --pre echopop
        python -c "import echopop; print(echopop.__version__)"
        echo "=== Done testing wheel file ==="

        echo "=== Testing source tar file ==="
        # Install tar gz and check import
        python -m pip uninstall --yes echopop
        python -m pip install --extra-index-url https://test.pypi.org/simple --upgrade --pre --no-binary=:all: echopop
        python -c "import echopop; print(echopop.__version__)"
        echo "=== Done testing source tar file ==="

  publish-pypi:
    name: Push echopop to production pypi
    needs: test-built-dist
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Test Git Tag Pass
      run: |
        echo "Git Tag Pass"
    - uses: actions/download-artifact@v4
      with:
        name: releases
        path: dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.8.14
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
